<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.spring.ticketpay.dao.TicketPayMapper">
    <resultMap type="ticketPayVO" id="ticketPayMap">
    	<result property="ticketVO.ticket_category" column="ticket_category"/>
    	<result property="ticketVO.ticket_name" column="ticket_name"/>
    	<result property="ticketVO.ticket_place" column="ticket_place"/>
    	<result property="ticketVO.ticket_date" column="ticket_date"/>
    	<result property="ticketVO.ticket_special1" column="ticket_special1"/>
    	<result property="ticketVO.ticket_special2" column="ticket_special2"/>
    	<result property="ticketVO.ticket_price" column="ticket_price"/>
    	<result property="ticketVO.ticket_quantity" column="ticket_quantity"/>
    	<result property="ticketVO.ticket_seat" column="ticket_seat"/>
    </resultMap>
    
    
    <!-- 티켓 결제 정보 저장 -->
  <insert id="insertTicketPay" parameterType="ticketPayVO">
    INSERT INTO ticket_pay (ticket_pay_num, ticket_num, ticket_pay_name, 
        ticket_pay_zipcode, ticket_pay_address1, ticket_pay_address2, ticket_pay_phone, mem_num)
    VALUES (ticket_pay_seq.nextval, #{ticket_num}, #{ticket_pay_name}, 
        #{ticket_pay_zipcode}, #{ticket_pay_address1}, #{ticket_pay_address2}, #{ticket_pay_phone}, #{mem_num})
</insert><!-- sql 태그외 include 태그를 이용해 SQL문 재사용 -->
	
	
	<!-- 검색 -->
		<sql id="ticketPaySearch">
				<if test="keyword != null and keyword != ''">
					<if test="keyfield == 1"> 
						AND ticket_name LIKE '%' || #{keyword} || '%'
					</if>
					<if test="keyfield == 2">
						AND ticket_content LIKE '%' || #{keyword} || '%'
					</if>
					<if test="keyfield == 3">
						AND (ticket_name LIKE '%' || #{keyword} || '%' OR
						ticket_content LIKE '%' || #{keyword} || '%')
					</if>
				</if>
				<if test="ticket_category != null and ticket_category != ''">
					ticket_category = #{ticket_category}
				</if>
		</sql>
	<!-- 예약내역 목록의 총개수/검색 개수 --> 
	<select id="selectRowCount" parameterType="map" resultType="integer">
		SELECT 
		COUNT(*) 
		FROM ticket_pay a JOIN ticket b ON a.ticket_num=b.ticket_num JOIN member m ON b.mem_num=m.mem_num WHERE a.mem_num=#{mem_num}
		<include refid="ticketPaySearch"></include>
	</select>
	<!-- 특정 사용자의 모든 예약 내역 조회 -->
	<select id="selectReservList" parameterType="map" resultMap="ticketPayMap">
		SELECT * FROM (
	    	SELECT a.*, 
	    	rownum rnum FROM (
	        	SELECT 
	            	a.ticket_pay_num,
	            	a.ticket_num,
	           	 	b.ticket_category,
	            	<![CDATA[
					REPLACE(REPLACE(b.ticket_name, '<', '&lt;'),'>','&gt;') ticket_name 
					]]>
		       	 FROM ticket_pay a 
		         JOIN ticket b ON a.ticket_num = b.ticket_num 
		         JOIN member m ON a.mem_num = m.mem_num 
		         WHERE a.mem_num=#{mem_num}
		         <include refid="ticketPaySearch"></include>
		         ORDER BY a.ticket_pay_num DESC)a)
	<![CDATA[
		WHERE rnum >= #{start} AND rnum <= #{end}
		]]>
	</select> 
	<!-- 예약 내역 상세 -->
	<select id="selectTicketPay" parameterType="integer" resultType="ticketVO">
		SELECT
    	  *
		FROM ticket
		WHERE
   		ticket_num = #{ticket_num}
		
	</select>
</mapper>
